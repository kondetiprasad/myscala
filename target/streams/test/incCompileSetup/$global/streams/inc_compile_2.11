format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /root/myscala/target/scala-2.11/test-classes
compile options:
17 items
00 -> -P:wartremover:traverser:org.brianmckenna.wartremover.warts.Any
01 -> -P:wartremover:traverser:org.brianmckenna.wartremover.warts.Any2StringAdd
02 -> -P:wartremover:traverser:org.brianmckenna.wartremover.warts.AsInstanceOf
03 -> -P:wartremover:traverser:org.brianmckenna.wartremover.warts.DefaultArguments
04 -> -P:wartremover:traverser:org.brianmckenna.wartremover.warts.EitherProjectionPartial
05 -> -P:wartremover:traverser:org.brianmckenna.wartremover.warts.IsInstanceOf
06 -> -P:wartremover:traverser:org.brianmckenna.wartremover.warts.ListOps
07 -> -P:wartremover:traverser:org.brianmckenna.wartremover.warts.NonUnitStatements
08 -> -P:wartremover:traverser:org.brianmckenna.wartremover.warts.Null
09 -> -P:wartremover:traverser:org.brianmckenna.wartremover.warts.OptionPartial
10 -> -P:wartremover:traverser:org.brianmckenna.wartremover.warts.Product
11 -> -P:wartremover:traverser:org.brianmckenna.wartremover.warts.Return
12 -> -P:wartremover:traverser:org.brianmckenna.wartremover.warts.Serializable
13 -> -P:wartremover:traverser:org.brianmckenna.wartremover.warts.Throw
14 -> -P:wartremover:traverser:org.brianmckenna.wartremover.warts.TryPartial
15 -> -P:wartremover:traverser:org.brianmckenna.wartremover.warts.Var
16 -> -Xplugin:/root/.ivy2/cache/org.brianmckenna/wartremover_2.11/jars/wartremover_2.11-0.14.jar
javac options:
0 items
compiler version:
1 items
0 -> 2.11.11
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
3 items
/root/myscala/src/test/scala/DemoTest.scala -> /root/myscala/target/scala-2.11/test-classes/DemoTest$$anonfun$1.class
/root/myscala/src/test/scala/DemoTest.scala -> /root/myscala/target/scala-2.11/test-classes/DemoTest$$anonfun$2.class
/root/myscala/src/test/scala/DemoTest.scala -> /root/myscala/target/scala-2.11/test-classes/DemoTest.class
binary dependencies:
3 items
/root/myscala/src/test/scala/DemoTest.scala -> /root/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.11.jar
/root/myscala/src/test/scala/DemoTest.scala -> /root/.ivy2/cache/org.scalactic/scalactic_2.11/bundles/scalactic_2.11-3.0.0.jar
/root/myscala/src/test/scala/DemoTest.scala -> /root/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-3.0.0.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
1 items
/root/myscala/src/test/scala/DemoTest.scala -> MyUtil$
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
3 items
/root/myscala/src/test/scala/DemoTest.scala -> DemoTest
/root/myscala/src/test/scala/DemoTest.scala -> DemoTest$$anonfun$1
/root/myscala/src/test/scala/DemoTest.scala -> DemoTest$$anonfun$2
used names:
24 items
/root/myscala/src/test/scala/DemoTest.scala -> <init>
/root/myscala/src/test/scala/DemoTest.scala -> DemoTest
/root/myscala/src/test/scala/DemoTest.scala -> FlatSpec
/root/myscala/src/test/scala/DemoTest.scala -> Matchers
/root/myscala/src/test/scala/DemoTest.scala -> MyUtil
/root/myscala/src/test/scala/DemoTest.scala -> Position
/root/myscala/src/test/scala/DemoTest.scala -> Prettifier
/root/myscala/src/test/scala/DemoTest.scala -> apply
/root/myscala/src/test/scala/DemoTest.scala -> be
/root/myscala/src/test/scala/DemoTest.scala -> canVote
/root/myscala/src/test/scala/DemoTest.scala -> convertToAnyShouldWrapper
/root/myscala/src/test/scala/DemoTest.scala -> convertToInAndIgnoreMethods
/root/myscala/src/test/scala/DemoTest.scala -> convertToStringShouldWrapper
/root/myscala/src/test/scala/DemoTest.scala -> default
/root/myscala/src/test/scala/DemoTest.scala -> here
/root/myscala/src/test/scala/DemoTest.scala -> in
/root/myscala/src/test/scala/DemoTest.scala -> it
/root/myscala/src/test/scala/DemoTest.scala -> multiply
/root/myscala/src/test/scala/DemoTest.scala -> org
/root/myscala/src/test/scala/DemoTest.scala -> scalactic
/root/myscala/src/test/scala/DemoTest.scala -> scalatest
/root/myscala/src/test/scala/DemoTest.scala -> shorthandTestRegistrationFunction
/root/myscala/src/test/scala/DemoTest.scala -> should
/root/myscala/src/test/scala/DemoTest.scala -> source
product stamps:
3 items
/root/myscala/target/scala-2.11/test-classes/DemoTest$$anonfun$1.class -> lastModified(1526411353000)
/root/myscala/target/scala-2.11/test-classes/DemoTest$$anonfun$2.class -> lastModified(1526411353000)
/root/myscala/target/scala-2.11/test-classes/DemoTest.class -> lastModified(1526411353000)
source stamps:
1 items
/root/myscala/src/test/scala/DemoTest.scala -> hash(2e351235ebc3c3a4f1cc39bf5b17f5646d931691)
binary stamps:
3 items
/root/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.11.jar -> lastModified(1492113025000)
/root/.ivy2/cache/org.scalactic/scalactic_2.11/bundles/scalactic_2.11-3.0.0.jar -> lastModified(1470060492000)
/root/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-3.0.0.jar -> lastModified(1470060705000)
class names:
3 items
/root/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.11.jar -> scala.Int
/root/.ivy2/cache/org.scalactic/scalactic_2.11/bundles/scalactic_2.11-3.0.0.jar -> org.scalactic.source.Position$
/root/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-3.0.0.jar -> org.scalatest.Matchers
internal apis:
1 items
/root/myscala/src/test/scala/DemoTest.scala -> 

external apis:
1 items
MyUtil$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHD4DpoUAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cAGz19N0AAZub3RpZnlzcQB+AAzQNftPdAAEd2FpdHNxAH4ADJpcNVR0AA0kYXNJbnN0YW5jZU9mc3EAfgAMr90bW3QABmVxdWFsc3NxAH4ADKhwZ3J0AAxhc0luc3RhbmNlT2ZzcQB+AAwt2RxBdAAMc3luY2hyb25pemVkc3EAfgAMtm2dwHQADSRpc0luc3RhbmNlT2ZzcQB+AAycpbHrdAAJbm90aWZ5QWxsc3EAfgAM/E3B7nQADGlzSW5zdGFuY2VPZnNxAH4ADEpQRpR0AAdjYW5Wb3Rlc3EAfgAMZ/R0FXQAAj09c3EAfgAMMZDJoHQABWNsb25lc3EAfgAMrUCmJ3QACG11bHRpcGx5c3EAfgAMJKOC2HQACHRvU3RyaW5nc3EAfgAMyJS1NnQAAiE9c3EAfgAM09V2XnQABk15VXRpbHNxAH4ADObAYAl0AAhnZXRDbGFzc3NxAH4ADDHRSUZ0AAJuZXNxAH4ADKnwwGR0AAJlcXNxAH4ADG6nLkx0AAIjI3NxAH4ADO0LE9h0AAhmaW5hbGl6ZXNxAH4ADLDPG3t0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AEN4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cABxAH4ALXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AWnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBDTAAJaW5oZXJpdGVkcQB+AENMAAdwYXJlbnRzcQB+AEN4cQB+AF9zcQB+AFp1cQB+AD4AAAAAc3EAfgBadXEAfgA+AAAAAHNxAH4AWnVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AXnQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AXnNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4Ad3QABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AeHNxAH4Aa3QAA0FueXNxAH4Ab3NxAH4AcnVxAH4AdQAAAAJzcQB+AHd0AAVzY2FsYXEAfgB+dXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAABzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAWNlNLAudXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAJy9yb290L215c2NhbGEvdGFyZ2V0L3NjYWxhLTIuMTEvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFNydfqm9kd9Kh/jzOiN/uRfajg0f
source infos:
1 items
/root/myscala/src/test/scala/DemoTest.scala -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABY2U0yu11cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQALC9yb290L215c2NhbGEvdGFyZ2V0L3NjYWxhLTIuMTEvdGVzdC1jbGFzc2VzdAABLw==
